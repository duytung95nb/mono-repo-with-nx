name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          filter: tree:0
          fetch-depth: 0

      # This enables task distribution via Nx Cloud
      # Run this command as early as possible, before dependencies are installed
      # Learn more at https://nx.dev/ci/reference/nx-cloud-cli#npx-nxcloud-startcirun
      # Uncomment this line to enable task distribution
      # - run: npx nx start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="e2e-ci"

      # Cache node_modules
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "yarn"
      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - run: yarn install --frozen-lockfile
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
      - name: Cache Playwright browsers
        id: cache-playwright-browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright # Adjust path based on OS
          key: playwright-browsers-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            playwright-browsers-${{ runner.os }}-
      - run: yarn playwright install --with-deps
        if: steps.cache-playwright-browsers.outputs.cache-hit != 'true'
      - uses: nrwl/nx-set-shas@v4

      # Prepend any command with "nx-cloud record --" to record its logs to Nx Cloud
      # - run: yarn nx-cloud record -- echo Hello World
      # When you enable task distribution, run the e2e-ci task instead of e2e
      - run: yarn nx affected -t lint test build e2e
        env:
          NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
